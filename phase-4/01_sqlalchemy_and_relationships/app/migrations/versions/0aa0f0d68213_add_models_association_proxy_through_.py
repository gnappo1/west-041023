"""add models association proxy through methods

Revision ID: 0aa0f0d68213
Revises: 1bb501f78e03
Create Date: 2023-06-13 16:00:42.212967

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0aa0f0d68213'
down_revision = '1bb501f78e03'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_owners')),
    sa.UniqueConstraint('email', name=op.f('uq_owners_email')),
    sa.UniqueConstraint('phone', name=op.f('uq_owners_phone'))
    )
    op.create_table('pets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('species', sa.String(), nullable=True),
    sa.Column('breed', sa.String(), nullable=True),
    sa.Column('temperament', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name=op.f('fk_pets_owner_id_owners')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pets'))
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('request', sa.String(), nullable=False),
    sa.Column('fee', sa.Float(), nullable=False),
    sa.Column('handler_id', sa.Integer(), nullable=True),
    sa.Column('pet_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("request IN ('Walk', 'Drop-In', 'Boarding')", name=op.f('ck_jobs_`request_check`')),
    sa.CheckConstraint('date > CURRENT_TIMESTAMP', name=op.f('ck_jobs_`future_date_check`')),
    sa.CheckConstraint('fee >= 12.0 and fee <= 50.0', name=op.f('ck_jobs_`fee_check`')),
    sa.CheckConstraint('length(notes) > 0', name=op.f('ck_jobs_`notes_length_check`')),
    sa.ForeignKeyConstraint(['handler_id'], ['handlers.id'], name=op.f('fk_jobs_handler_id_handlers')),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('fk_jobs_pet_id_pets')),
    sa.PrimaryKeyConstraint('id', name='job_pk')
    )
    with op.batch_alter_table('handlers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('handlers', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    op.drop_table('jobs')
    op.drop_table('pets')
    op.drop_table('owners')
    # ### end Alembic commands ###
